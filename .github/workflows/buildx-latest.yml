name: Buildx latest
on:
  push:
    branches: [master]
    paths-ignore:
      - .github/workflows/buildx-release.yml
      - README.md
jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      -
        name: Run Buildx (build)
        run: |
          docker buildx build \
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --output "type=image,push=false" \
            --tag docker.pkg.github.com/mikesplain/actiontest/image:latest \
            --file ./Dockerfile .
      -
        name: Docker Login
        env:
          DOCKER_USERNAME: $GITHUB_ACTOR
          DOCKER_PASSWORD: ${{secrets.GITHUB_TOKEN}}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin docker.pkg.github.com

      -
        name: Run Buildx (push)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --output "type=image,push=true" \
            --tag docker.pkg.github.com/mikesplain/actiontest/image:latest \
            --file ./Dockerfile .

